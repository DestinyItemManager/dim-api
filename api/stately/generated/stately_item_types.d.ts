// @generated by Stately. DO NOT EDIT.
/* eslint-disable */

import type {
  ClientOptions,
  DatabaseClient as GenericDatabaseClient,
  StoreID,
} from '@stately-cloud/client';
import type {
  ApiApp,
  ApiAppSchema,
  ArtifactUnlocksSchema,
  CollapsedSectionSchema,
  CustomStatDefSchema,
  CustomStatsEntrySchema,
  CustomStatWeightsEntrySchema,
  GlobalSettings,
  GlobalSettingsSchema,
  InGameLoadoutIdentifiersSchema,
  ItemAnnotation,
  ItemAnnotationSchema,
  ItemHashTag,
  ItemHashTagSchema,
  Loadout,
  LoadoutItemSchema,
  LoadoutParametersSchema,
  LoadoutSchema,
  LoadoutShare,
  LoadoutShareSchema,
  ModsByBucketEntrySchema,
  Search,
  SearchSchema,
  SetBonusCountSchema,
  Settings,
  SettingsSchema,
  SocketOverrideSchema,
  StatConstraintSchema,
  StatConstraintsEntrySchema,
  Triumph,
  TriumphSchema,
} from './stately_pb.js';

export declare const itemTypeToSchema: {
  ApiApp: typeof ApiAppSchema;
  GlobalSettings: typeof GlobalSettingsSchema;
  ItemAnnotation: typeof ItemAnnotationSchema;
  ItemHashTag: typeof ItemHashTagSchema;
  Loadout: typeof LoadoutSchema;
  LoadoutShare: typeof LoadoutShareSchema;
  Search: typeof SearchSchema;
  Settings: typeof SettingsSchema;
  Triumph: typeof TriumphSchema;
  ArtifactUnlocks: typeof ArtifactUnlocksSchema;
  CollapsedSection: typeof CollapsedSectionSchema;
  CustomStatDef: typeof CustomStatDefSchema;
  CustomStatsEntry: typeof CustomStatsEntrySchema;
  CustomStatWeightsEntry: typeof CustomStatWeightsEntrySchema;
  InGameLoadoutIdentifiers: typeof InGameLoadoutIdentifiersSchema;
  LoadoutItem: typeof LoadoutItemSchema;
  LoadoutParameters: typeof LoadoutParametersSchema;
  ModsByBucketEntry: typeof ModsByBucketEntrySchema;
  SetBonusCount: typeof SetBonusCountSchema;
  SocketOverride: typeof SocketOverrideSchema;
  StatConstraint: typeof StatConstraintSchema;
  StatConstraintsEntry: typeof StatConstraintsEntrySchema;
};

// AllItemTypes is a convenience type that represents all item type names in your schema.
export type AllItemTypes =
  | 'ApiApp'
  | 'GlobalSettings'
  | 'ItemAnnotation'
  | 'ItemHashTag'
  | 'Loadout'
  | 'LoadoutShare'
  | 'Search'
  | 'Settings'
  | 'Triumph';

// AnyItem is a convenience type that represents any item shape in your schema.
export type AnyItem =
  | ApiApp
  | GlobalSettings
  | ItemAnnotation
  | ItemHashTag
  | Loadout
  | LoadoutShare
  | Search
  | Settings
  | Triumph;

// DatabaseClient is a database client that has been customized with your schema.
export type DatabaseClient = GenericDatabaseClient<typeof itemTypeToSchema, AllItemTypes>;

// createClient creates a new database client with your schema.
export declare function createClient(storeId: StoreID, opts?: ClientOptions): DatabaseClient;
