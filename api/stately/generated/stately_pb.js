// @generated by Stately. DO NOT EDIT.
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, tsEnum } from '@bufbuild/protobuf/codegenv1';

export const file_stately =
  /*@__PURE__*/
  fileDesc(
    '',
  );

/**
 * Describes the message stately.generated.ApiApp.
 * Use `create(ApiAppSchema)` to create a new message.
 */
export const ApiAppSchema = /*@__PURE__*/ messageDesc(file_stately, 0);

/**
 * Describes the message stately.generated.ArtifactUnlocks.
 * Use `create(ArtifactUnlocksSchema)` to create a new message.
 */
export const ArtifactUnlocksSchema = /*@__PURE__*/ messageDesc(file_stately, 1);

/**
 * Describes the message stately.generated.CollapsedSection.
 * Use `create(CollapsedSectionSchema)` to create a new message.
 */
export const CollapsedSectionSchema = /*@__PURE__*/ messageDesc(file_stately, 2);

/**
 * Describes the message stately.generated.CustomStatDef.
 * Use `create(CustomStatDefSchema)` to create a new message.
 */
export const CustomStatDefSchema = /*@__PURE__*/ messageDesc(file_stately, 3);

/**
 * Describes the message stately.generated.CustomStatsEntry.
 * Use `create(CustomStatsEntrySchema)` to create a new message.
 */
export const CustomStatsEntrySchema = /*@__PURE__*/ messageDesc(file_stately, 4);

/**
 * Describes the message stately.generated.CustomStatWeightsEntry.
 * Use `create(CustomStatWeightsEntrySchema)` to create a new message.
 */
export const CustomStatWeightsEntrySchema = /*@__PURE__*/ messageDesc(file_stately, 5);

/**
 * Describes the message stately.generated.GlobalSettings.
 * Use `create(GlobalSettingsSchema)` to create a new message.
 */
export const GlobalSettingsSchema = /*@__PURE__*/ messageDesc(file_stately, 6);

/**
 * Describes the message stately.generated.InGameLoadoutIdentifiers.
 * Use `create(InGameLoadoutIdentifiersSchema)` to create a new message.
 */
export const InGameLoadoutIdentifiersSchema = /*@__PURE__*/ messageDesc(file_stately, 7);

/**
 * Describes the message stately.generated.ItemAnnotation.
 * Use `create(ItemAnnotationSchema)` to create a new message.
 */
export const ItemAnnotationSchema = /*@__PURE__*/ messageDesc(file_stately, 8);

/**
 * Describes the message stately.generated.ItemHashTag.
 * Use `create(ItemHashTagSchema)` to create a new message.
 */
export const ItemHashTagSchema = /*@__PURE__*/ messageDesc(file_stately, 9);

/**
 * Describes the message stately.generated.Loadout.
 * Use `create(LoadoutSchema)` to create a new message.
 */
export const LoadoutSchema = /*@__PURE__*/ messageDesc(file_stately, 10);

/**
 * Describes the message stately.generated.LoadoutItem.
 * Use `create(LoadoutItemSchema)` to create a new message.
 */
export const LoadoutItemSchema = /*@__PURE__*/ messageDesc(file_stately, 11);

/**
 * Describes the message stately.generated.LoadoutParameters.
 * Use `create(LoadoutParametersSchema)` to create a new message.
 */
export const LoadoutParametersSchema = /*@__PURE__*/ messageDesc(file_stately, 12);

/**
 * Describes the message stately.generated.LoadoutShare.
 * Use `create(LoadoutShareSchema)` to create a new message.
 */
export const LoadoutShareSchema = /*@__PURE__*/ messageDesc(file_stately, 13);

/**
 * Describes the message stately.generated.ModsByBucketEntry.
 * Use `create(ModsByBucketEntrySchema)` to create a new message.
 */
export const ModsByBucketEntrySchema = /*@__PURE__*/ messageDesc(file_stately, 14);

/**
 * Describes the message stately.generated.Search.
 * Use `create(SearchSchema)` to create a new message.
 */
export const SearchSchema = /*@__PURE__*/ messageDesc(file_stately, 15);

/**
 * Describes the message stately.generated.SetBonusCount.
 * Use `create(SetBonusCountSchema)` to create a new message.
 */
export const SetBonusCountSchema = /*@__PURE__*/ messageDesc(file_stately, 16);

/**
 * Describes the message stately.generated.Settings.
 * Use `create(SettingsSchema)` to create a new message.
 */
export const SettingsSchema = /*@__PURE__*/ messageDesc(file_stately, 17);

/**
 * Describes the message stately.generated.SocketOverride.
 * Use `create(SocketOverrideSchema)` to create a new message.
 */
export const SocketOverrideSchema = /*@__PURE__*/ messageDesc(file_stately, 18);

/**
 * Describes the message stately.generated.StatConstraint.
 * Use `create(StatConstraintSchema)` to create a new message.
 */
export const StatConstraintSchema = /*@__PURE__*/ messageDesc(file_stately, 19);

/**
 * Describes the message stately.generated.StatConstraintsEntry.
 * Use `create(StatConstraintsEntrySchema)` to create a new message.
 */
export const StatConstraintsEntrySchema = /*@__PURE__*/ messageDesc(file_stately, 20);

/**
 * Describes the message stately.generated.Triumph.
 * Use `create(TriumphSchema)` to create a new message.
 */
export const TriumphSchema = /*@__PURE__*/ messageDesc(file_stately, 21);

/**
 * Describes the enum stately.generated.AssumeArmorMasterwork.
 */
export const AssumeArmorMasterworkSchema = /*@__PURE__*/ enumDesc(file_stately, 0);

export const AssumeArmorMasterwork = /*@__PURE__*/ tsEnum(AssumeArmorMasterworkSchema);

/**
 * Describes the enum stately.generated.CharacterOrder.
 */
export const CharacterOrderSchema = /*@__PURE__*/ enumDesc(file_stately, 1);

export const CharacterOrder = /*@__PURE__*/ tsEnum(CharacterOrderSchema);

/**
 * Describes the enum stately.generated.DescriptionOptions.
 */
export const DescriptionOptionsSchema = /*@__PURE__*/ enumDesc(file_stately, 2);

export const DescriptionOptions = /*@__PURE__*/ tsEnum(DescriptionOptionsSchema);

/**
 * Describes the enum stately.generated.DestinyClass.
 */
export const DestinyClassSchema = /*@__PURE__*/ enumDesc(file_stately, 3);

export const DestinyClass = /*@__PURE__*/ tsEnum(DestinyClassSchema);

/**
 * Describes the enum stately.generated.InfuseDirection.
 */
export const InfuseDirectionSchema = /*@__PURE__*/ enumDesc(file_stately, 4);

export const InfuseDirection = /*@__PURE__*/ tsEnum(InfuseDirectionSchema);

/**
 * Describes the enum stately.generated.ItemPopupTab.
 */
export const ItemPopupTabSchema = /*@__PURE__*/ enumDesc(file_stately, 5);

export const ItemPopupTab = /*@__PURE__*/ tsEnum(ItemPopupTabSchema);

/**
 * Describes the enum stately.generated.LoadoutSort.
 */
export const LoadoutSortSchema = /*@__PURE__*/ enumDesc(file_stately, 6);

export const LoadoutSort = /*@__PURE__*/ tsEnum(LoadoutSortSchema);

/**
 * Describes the enum stately.generated.SearchType.
 */
export const SearchTypeSchema = /*@__PURE__*/ enumDesc(file_stately, 7);

export const SearchType = /*@__PURE__*/ tsEnum(SearchTypeSchema);

/**
 * Describes the enum stately.generated.TagValue.
 */
export const TagValueSchema = /*@__PURE__*/ enumDesc(file_stately, 8);

export const TagValue = /*@__PURE__*/ tsEnum(TagValueSchema);

/**
 * Describes the enum stately.generated.VaultWeaponGroupingStyle.
 */
export const VaultWeaponGroupingStyleSchema = /*@__PURE__*/ enumDesc(file_stately, 9);

export const VaultWeaponGroupingStyle = /*@__PURE__*/ tsEnum(VaultWeaponGroupingStyleSchema);
